//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace WindowsFormsApplication1.ir.kanoonesms.panel {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="smsSendWebServiceforPHPSoap", Namespace="http://tempuri.org/")]
    public partial class smsSendWebServiceforPHP : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SendSmsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendSingleSmsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCreditOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReceiveSMSWithNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadReceiveSMSOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteReceiveSMSOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDeliveryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLastDeliveryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSingleDeliveryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllDeliveryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReadReceiveSMSOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReceiveSMSOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCountAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReceiveMessaageOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendFutureSmsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFutureSmsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckSendFutureOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public smsSendWebServiceforPHP() {
            this.Url = global::WindowsFormsApplication1.Properties.Settings.Default.WindowsFormsApplication1_ir_kanoonesms_panel_smsSendWebServiceforPHP;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SendSmsCompletedEventHandler SendSmsCompleted;
        
        /// <remarks/>
        public event SendSingleSmsCompletedEventHandler SendSingleSmsCompleted;
        
        /// <remarks/>
        public event getCreditCompletedEventHandler getCreditCompleted;
        
        /// <remarks/>
        public event GetReceiveSMSWithNumberCompletedEventHandler GetReceiveSMSWithNumberCompleted;
        
        /// <remarks/>
        public event ReadReceiveSMSCompletedEventHandler ReadReceiveSMSCompleted;
        
        /// <remarks/>
        public event DeleteReceiveSMSCompletedEventHandler DeleteReceiveSMSCompleted;
        
        /// <remarks/>
        public event GetDeliveryCompletedEventHandler GetDeliveryCompleted;
        
        /// <remarks/>
        public event GetLastDeliveryCompletedEventHandler GetLastDeliveryCompleted;
        
        /// <remarks/>
        public event GetSingleDeliveryCompletedEventHandler GetSingleDeliveryCompleted;
        
        /// <remarks/>
        public event GetAllDeliveryCompletedEventHandler GetAllDeliveryCompleted;
        
        /// <remarks/>
        public event GetReadReceiveSMSCompletedEventHandler GetReadReceiveSMSCompleted;
        
        /// <remarks/>
        public event GetReceiveSMSCompletedEventHandler GetReceiveSMSCompleted;
        
        /// <remarks/>
        public event GetCountAllCompletedEventHandler GetCountAllCompleted;
        
        /// <remarks/>
        public event GetCountCompletedEventHandler GetCountCompleted;
        
        /// <remarks/>
        public event ReceiveMessaageCompletedEventHandler ReceiveMessaageCompleted;
        
        /// <remarks/>
        public event SendFutureSmsCompletedEventHandler SendFutureSmsCompleted;
        
        /// <remarks/>
        public event DeleteFutureSmsCompletedEventHandler DeleteFutureSmsCompleted;
        
        /// <remarks/>
        public event CheckSendFutureCompletedEventHandler CheckSendFutureCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendSms", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long[] SendSms(string UserName, string Pass, string Domain, string[] SmsText, string[] MobileNumber, string SenderNumber, SendType sendType, SmsMode smsMode) {
            object[] results = this.Invoke("SendSms", new object[] {
                        UserName,
                        Pass,
                        Domain,
                        SmsText,
                        MobileNumber,
                        SenderNumber,
                        sendType,
                        smsMode});
            return ((long[])(results[0]));
        }
        
        /// <remarks/>
        public void SendSmsAsync(string UserName, string Pass, string Domain, string[] SmsText, string[] MobileNumber, string SenderNumber, SendType sendType, SmsMode smsMode) {
            this.SendSmsAsync(UserName, Pass, Domain, SmsText, MobileNumber, SenderNumber, sendType, smsMode, null);
        }
        
        /// <remarks/>
        public void SendSmsAsync(string UserName, string Pass, string Domain, string[] SmsText, string[] MobileNumber, string SenderNumber, SendType sendType, SmsMode smsMode, object userState) {
            if ((this.SendSmsOperationCompleted == null)) {
                this.SendSmsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSmsOperationCompleted);
            }
            this.InvokeAsync("SendSms", new object[] {
                        UserName,
                        Pass,
                        Domain,
                        SmsText,
                        MobileNumber,
                        SenderNumber,
                        sendType,
                        smsMode}, this.SendSmsOperationCompleted, userState);
        }
        
        private void OnSendSmsOperationCompleted(object arg) {
            if ((this.SendSmsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSmsCompleted(this, new SendSmsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendSingleSms", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long SendSingleSms(string UserName, string Pass, string Domain, string SmsText, string MobileNumber, string SenderNumber, SmsMode smsMode) {
            object[] results = this.Invoke("SendSingleSms", new object[] {
                        UserName,
                        Pass,
                        Domain,
                        SmsText,
                        MobileNumber,
                        SenderNumber,
                        smsMode});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void SendSingleSmsAsync(string UserName, string Pass, string Domain, string SmsText, string MobileNumber, string SenderNumber, SmsMode smsMode) {
            this.SendSingleSmsAsync(UserName, Pass, Domain, SmsText, MobileNumber, SenderNumber, smsMode, null);
        }
        
        /// <remarks/>
        public void SendSingleSmsAsync(string UserName, string Pass, string Domain, string SmsText, string MobileNumber, string SenderNumber, SmsMode smsMode, object userState) {
            if ((this.SendSingleSmsOperationCompleted == null)) {
                this.SendSingleSmsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSingleSmsOperationCompleted);
            }
            this.InvokeAsync("SendSingleSms", new object[] {
                        UserName,
                        Pass,
                        Domain,
                        SmsText,
                        MobileNumber,
                        SenderNumber,
                        smsMode}, this.SendSingleSmsOperationCompleted, userState);
        }
        
        private void OnSendSingleSmsOperationCompleted(object arg) {
            if ((this.SendSingleSmsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSingleSmsCompleted(this, new SendSingleSmsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCredit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getCredit(string UserName, string Pass, string Domain) {
            object[] results = this.Invoke("getCredit", new object[] {
                        UserName,
                        Pass,
                        Domain});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getCreditAsync(string UserName, string Pass, string Domain) {
            this.getCreditAsync(UserName, Pass, Domain, null);
        }
        
        /// <remarks/>
        public void getCreditAsync(string UserName, string Pass, string Domain, object userState) {
            if ((this.getCreditOperationCompleted == null)) {
                this.getCreditOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCreditOperationCompleted);
            }
            this.InvokeAsync("getCredit", new object[] {
                        UserName,
                        Pass,
                        Domain}, this.getCreditOperationCompleted, userState);
        }
        
        private void OngetCreditOperationCompleted(object arg) {
            if ((this.getCreditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCreditCompleted(this, new getCreditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReceiveSMSWithNumber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ReceiveSMS[] GetReceiveSMSWithNumber(string UserName, string Pass, string Domain, ReceiveType RecType, string LineNumber, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> Count, string FromDate, string ToDate) {
            object[] results = this.Invoke("GetReceiveSMSWithNumber", new object[] {
                        UserName,
                        Pass,
                        Domain,
                        RecType,
                        LineNumber,
                        Count,
                        FromDate,
                        ToDate});
            return ((ReceiveSMS[])(results[0]));
        }
        
        /// <remarks/>
        public void GetReceiveSMSWithNumberAsync(string UserName, string Pass, string Domain, ReceiveType RecType, string LineNumber, System.Nullable<int> Count, string FromDate, string ToDate) {
            this.GetReceiveSMSWithNumberAsync(UserName, Pass, Domain, RecType, LineNumber, Count, FromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void GetReceiveSMSWithNumberAsync(string UserName, string Pass, string Domain, ReceiveType RecType, string LineNumber, System.Nullable<int> Count, string FromDate, string ToDate, object userState) {
            if ((this.GetReceiveSMSWithNumberOperationCompleted == null)) {
                this.GetReceiveSMSWithNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReceiveSMSWithNumberOperationCompleted);
            }
            this.InvokeAsync("GetReceiveSMSWithNumber", new object[] {
                        UserName,
                        Pass,
                        Domain,
                        RecType,
                        LineNumber,
                        Count,
                        FromDate,
                        ToDate}, this.GetReceiveSMSWithNumberOperationCompleted, userState);
        }
        
        private void OnGetReceiveSMSWithNumberOperationCompleted(object arg) {
            if ((this.GetReceiveSMSWithNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReceiveSMSWithNumberCompleted(this, new GetReceiveSMSWithNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReadReceiveSMS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> ReadReceiveSMS(string UserName, string Pass, string Domain, decimal reciveCode) {
            object[] results = this.Invoke("ReadReceiveSMS", new object[] {
                        UserName,
                        Pass,
                        Domain,
                        reciveCode});
            return ((System.Nullable<bool>)(results[0]));
        }
        
        /// <remarks/>
        public void ReadReceiveSMSAsync(string UserName, string Pass, string Domain, decimal reciveCode) {
            this.ReadReceiveSMSAsync(UserName, Pass, Domain, reciveCode, null);
        }
        
        /// <remarks/>
        public void ReadReceiveSMSAsync(string UserName, string Pass, string Domain, decimal reciveCode, object userState) {
            if ((this.ReadReceiveSMSOperationCompleted == null)) {
                this.ReadReceiveSMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadReceiveSMSOperationCompleted);
            }
            this.InvokeAsync("ReadReceiveSMS", new object[] {
                        UserName,
                        Pass,
                        Domain,
                        reciveCode}, this.ReadReceiveSMSOperationCompleted, userState);
        }
        
        private void OnReadReceiveSMSOperationCompleted(object arg) {
            if ((this.ReadReceiveSMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadReceiveSMSCompleted(this, new ReadReceiveSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteReceiveSMS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteReceiveSMS(string UserName, string Pass, string Domain, decimal[] reciveCode) {
            object[] results = this.Invoke("DeleteReceiveSMS", new object[] {
                        UserName,
                        Pass,
                        Domain,
                        reciveCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteReceiveSMSAsync(string UserName, string Pass, string Domain, decimal[] reciveCode) {
            this.DeleteReceiveSMSAsync(UserName, Pass, Domain, reciveCode, null);
        }
        
        /// <remarks/>
        public void DeleteReceiveSMSAsync(string UserName, string Pass, string Domain, decimal[] reciveCode, object userState) {
            if ((this.DeleteReceiveSMSOperationCompleted == null)) {
                this.DeleteReceiveSMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteReceiveSMSOperationCompleted);
            }
            this.InvokeAsync("DeleteReceiveSMS", new object[] {
                        UserName,
                        Pass,
                        Domain,
                        reciveCode}, this.DeleteReceiveSMSOperationCompleted, userState);
        }
        
        private void OnDeleteReceiveSMSOperationCompleted(object arg) {
            if ((this.DeleteReceiveSMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteReceiveSMSCompleted(this, new DeleteReceiveSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDelivery", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int[] GetDelivery(string UserName, string Pass, string Domain, long[] smsId) {
            object[] results = this.Invoke("GetDelivery", new object[] {
                        UserName,
                        Pass,
                        Domain,
                        smsId});
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDeliveryAsync(string UserName, string Pass, string Domain, long[] smsId) {
            this.GetDeliveryAsync(UserName, Pass, Domain, smsId, null);
        }
        
        /// <remarks/>
        public void GetDeliveryAsync(string UserName, string Pass, string Domain, long[] smsId, object userState) {
            if ((this.GetDeliveryOperationCompleted == null)) {
                this.GetDeliveryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDeliveryOperationCompleted);
            }
            this.InvokeAsync("GetDelivery", new object[] {
                        UserName,
                        Pass,
                        Domain,
                        smsId}, this.GetDeliveryOperationCompleted, userState);
        }
        
        private void OnGetDeliveryOperationCompleted(object arg) {
            if ((this.GetDeliveryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDeliveryCompleted(this, new GetDeliveryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLastDelivery", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int[] GetLastDelivery(string UserName, string Pass, string Domain, long[] smsId) {
            object[] results = this.Invoke("GetLastDelivery", new object[] {
                        UserName,
                        Pass,
                        Domain,
                        smsId});
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLastDeliveryAsync(string UserName, string Pass, string Domain, long[] smsId) {
            this.GetLastDeliveryAsync(UserName, Pass, Domain, smsId, null);
        }
        
        /// <remarks/>
        public void GetLastDeliveryAsync(string UserName, string Pass, string Domain, long[] smsId, object userState) {
            if ((this.GetLastDeliveryOperationCompleted == null)) {
                this.GetLastDeliveryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLastDeliveryOperationCompleted);
            }
            this.InvokeAsync("GetLastDelivery", new object[] {
                        UserName,
                        Pass,
                        Domain,
                        smsId}, this.GetLastDeliveryOperationCompleted, userState);
        }
        
        private void OnGetLastDeliveryOperationCompleted(object arg) {
            if ((this.GetLastDeliveryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLastDeliveryCompleted(this, new GetLastDeliveryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSingleDelivery", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetSingleDelivery(string UserName, string Pass, string Domain, long SmsId) {
            object[] results = this.Invoke("GetSingleDelivery", new object[] {
                        UserName,
                        Pass,
                        Domain,
                        SmsId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetSingleDeliveryAsync(string UserName, string Pass, string Domain, long SmsId) {
            this.GetSingleDeliveryAsync(UserName, Pass, Domain, SmsId, null);
        }
        
        /// <remarks/>
        public void GetSingleDeliveryAsync(string UserName, string Pass, string Domain, long SmsId, object userState) {
            if ((this.GetSingleDeliveryOperationCompleted == null)) {
                this.GetSingleDeliveryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSingleDeliveryOperationCompleted);
            }
            this.InvokeAsync("GetSingleDelivery", new object[] {
                        UserName,
                        Pass,
                        Domain,
                        SmsId}, this.GetSingleDeliveryOperationCompleted, userState);
        }
        
        private void OnGetSingleDeliveryOperationCompleted(object arg) {
            if ((this.GetSingleDeliveryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSingleDeliveryCompleted(this, new GetSingleDeliveryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllDelivery", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int[] GetAllDelivery(string UserName, string Pass, string Domain, long[] SmsId, string LineNumber) {
            object[] results = this.Invoke("GetAllDelivery", new object[] {
                        UserName,
                        Pass,
                        Domain,
                        SmsId,
                        LineNumber});
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllDeliveryAsync(string UserName, string Pass, string Domain, long[] SmsId, string LineNumber) {
            this.GetAllDeliveryAsync(UserName, Pass, Domain, SmsId, LineNumber, null);
        }
        
        /// <remarks/>
        public void GetAllDeliveryAsync(string UserName, string Pass, string Domain, long[] SmsId, string LineNumber, object userState) {
            if ((this.GetAllDeliveryOperationCompleted == null)) {
                this.GetAllDeliveryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllDeliveryOperationCompleted);
            }
            this.InvokeAsync("GetAllDelivery", new object[] {
                        UserName,
                        Pass,
                        Domain,
                        SmsId,
                        LineNumber}, this.GetAllDeliveryOperationCompleted, userState);
        }
        
        private void OnGetAllDeliveryOperationCompleted(object arg) {
            if ((this.GetAllDeliveryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllDeliveryCompleted(this, new GetAllDeliveryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReadReceiveSMS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ReceiveSMS[] GetReadReceiveSMS(string UserName, string Pass, string Domain, bool Read, string FromDate, string ToDate) {
            object[] results = this.Invoke("GetReadReceiveSMS", new object[] {
                        UserName,
                        Pass,
                        Domain,
                        Read,
                        FromDate,
                        ToDate});
            return ((ReceiveSMS[])(results[0]));
        }
        
        /// <remarks/>
        public void GetReadReceiveSMSAsync(string UserName, string Pass, string Domain, bool Read, string FromDate, string ToDate) {
            this.GetReadReceiveSMSAsync(UserName, Pass, Domain, Read, FromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void GetReadReceiveSMSAsync(string UserName, string Pass, string Domain, bool Read, string FromDate, string ToDate, object userState) {
            if ((this.GetReadReceiveSMSOperationCompleted == null)) {
                this.GetReadReceiveSMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReadReceiveSMSOperationCompleted);
            }
            this.InvokeAsync("GetReadReceiveSMS", new object[] {
                        UserName,
                        Pass,
                        Domain,
                        Read,
                        FromDate,
                        ToDate}, this.GetReadReceiveSMSOperationCompleted, userState);
        }
        
        private void OnGetReadReceiveSMSOperationCompleted(object arg) {
            if ((this.GetReadReceiveSMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReadReceiveSMSCompleted(this, new GetReadReceiveSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReceiveSMS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ReceiveSMS[] GetReceiveSMS(string UserName, string Pass, string Domain, ReceiveType RecType, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> Count, string FromDate, string ToDate) {
            object[] results = this.Invoke("GetReceiveSMS", new object[] {
                        UserName,
                        Pass,
                        Domain,
                        RecType,
                        Count,
                        FromDate,
                        ToDate});
            return ((ReceiveSMS[])(results[0]));
        }
        
        /// <remarks/>
        public void GetReceiveSMSAsync(string UserName, string Pass, string Domain, ReceiveType RecType, System.Nullable<int> Count, string FromDate, string ToDate) {
            this.GetReceiveSMSAsync(UserName, Pass, Domain, RecType, Count, FromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void GetReceiveSMSAsync(string UserName, string Pass, string Domain, ReceiveType RecType, System.Nullable<int> Count, string FromDate, string ToDate, object userState) {
            if ((this.GetReceiveSMSOperationCompleted == null)) {
                this.GetReceiveSMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReceiveSMSOperationCompleted);
            }
            this.InvokeAsync("GetReceiveSMS", new object[] {
                        UserName,
                        Pass,
                        Domain,
                        RecType,
                        Count,
                        FromDate,
                        ToDate}, this.GetReceiveSMSOperationCompleted, userState);
        }
        
        private void OnGetReceiveSMSOperationCompleted(object arg) {
            if ((this.GetReceiveSMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReceiveSMSCompleted(this, new GetReceiveSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCountAll", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetCountAll(string UserName, string Pass, string Domain) {
            object[] results = this.Invoke("GetCountAll", new object[] {
                        UserName,
                        Pass,
                        Domain});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetCountAllAsync(string UserName, string Pass, string Domain) {
            this.GetCountAllAsync(UserName, Pass, Domain, null);
        }
        
        /// <remarks/>
        public void GetCountAllAsync(string UserName, string Pass, string Domain, object userState) {
            if ((this.GetCountAllOperationCompleted == null)) {
                this.GetCountAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCountAllOperationCompleted);
            }
            this.InvokeAsync("GetCountAll", new object[] {
                        UserName,
                        Pass,
                        Domain}, this.GetCountAllOperationCompleted, userState);
        }
        
        private void OnGetCountAllOperationCompleted(object arg) {
            if ((this.GetCountAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCountAllCompleted(this, new GetCountAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetCount(string UserName, string Pass, string Domain, string LineNumber) {
            object[] results = this.Invoke("GetCount", new object[] {
                        UserName,
                        Pass,
                        Domain,
                        LineNumber});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetCountAsync(string UserName, string Pass, string Domain, string LineNumber) {
            this.GetCountAsync(UserName, Pass, Domain, LineNumber, null);
        }
        
        /// <remarks/>
        public void GetCountAsync(string UserName, string Pass, string Domain, string LineNumber, object userState) {
            if ((this.GetCountOperationCompleted == null)) {
                this.GetCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCountOperationCompleted);
            }
            this.InvokeAsync("GetCount", new object[] {
                        UserName,
                        Pass,
                        Domain,
                        LineNumber}, this.GetCountOperationCompleted, userState);
        }
        
        private void OnGetCountOperationCompleted(object arg) {
            if ((this.GetCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCountCompleted(this, new GetCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReceiveMessaage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ReceiveSMS[] ReceiveMessaage(string UserName, string Pass, string Domain, ReceiveSmsType RecType, string FromDate, string ToDate, string LineNumber) {
            object[] results = this.Invoke("ReceiveMessaage", new object[] {
                        UserName,
                        Pass,
                        Domain,
                        RecType,
                        FromDate,
                        ToDate,
                        LineNumber});
            return ((ReceiveSMS[])(results[0]));
        }
        
        /// <remarks/>
        public void ReceiveMessaageAsync(string UserName, string Pass, string Domain, ReceiveSmsType RecType, string FromDate, string ToDate, string LineNumber) {
            this.ReceiveMessaageAsync(UserName, Pass, Domain, RecType, FromDate, ToDate, LineNumber, null);
        }
        
        /// <remarks/>
        public void ReceiveMessaageAsync(string UserName, string Pass, string Domain, ReceiveSmsType RecType, string FromDate, string ToDate, string LineNumber, object userState) {
            if ((this.ReceiveMessaageOperationCompleted == null)) {
                this.ReceiveMessaageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReceiveMessaageOperationCompleted);
            }
            this.InvokeAsync("ReceiveMessaage", new object[] {
                        UserName,
                        Pass,
                        Domain,
                        RecType,
                        FromDate,
                        ToDate,
                        LineNumber}, this.ReceiveMessaageOperationCompleted, userState);
        }
        
        private void OnReceiveMessaageOperationCompleted(object arg) {
            if ((this.ReceiveMessaageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReceiveMessaageCompleted(this, new ReceiveMessaageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendFutureSms", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SendFutureSms(string UserName, string Pass, string Domain, string LineNumber, string ReceiveNumber, string Date, string Time, string SmsText) {
            object[] results = this.Invoke("SendFutureSms", new object[] {
                        UserName,
                        Pass,
                        Domain,
                        LineNumber,
                        ReceiveNumber,
                        Date,
                        Time,
                        SmsText});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SendFutureSmsAsync(string UserName, string Pass, string Domain, string LineNumber, string ReceiveNumber, string Date, string Time, string SmsText) {
            this.SendFutureSmsAsync(UserName, Pass, Domain, LineNumber, ReceiveNumber, Date, Time, SmsText, null);
        }
        
        /// <remarks/>
        public void SendFutureSmsAsync(string UserName, string Pass, string Domain, string LineNumber, string ReceiveNumber, string Date, string Time, string SmsText, object userState) {
            if ((this.SendFutureSmsOperationCompleted == null)) {
                this.SendFutureSmsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendFutureSmsOperationCompleted);
            }
            this.InvokeAsync("SendFutureSms", new object[] {
                        UserName,
                        Pass,
                        Domain,
                        LineNumber,
                        ReceiveNumber,
                        Date,
                        Time,
                        SmsText}, this.SendFutureSmsOperationCompleted, userState);
        }
        
        private void OnSendFutureSmsOperationCompleted(object arg) {
            if ((this.SendFutureSmsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendFutureSmsCompleted(this, new SendFutureSmsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteFutureSms", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteFutureSms(string UserName, string Pass, string Domain, int FutureId) {
            object[] results = this.Invoke("DeleteFutureSms", new object[] {
                        UserName,
                        Pass,
                        Domain,
                        FutureId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteFutureSmsAsync(string UserName, string Pass, string Domain, int FutureId) {
            this.DeleteFutureSmsAsync(UserName, Pass, Domain, FutureId, null);
        }
        
        /// <remarks/>
        public void DeleteFutureSmsAsync(string UserName, string Pass, string Domain, int FutureId, object userState) {
            if ((this.DeleteFutureSmsOperationCompleted == null)) {
                this.DeleteFutureSmsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFutureSmsOperationCompleted);
            }
            this.InvokeAsync("DeleteFutureSms", new object[] {
                        UserName,
                        Pass,
                        Domain,
                        FutureId}, this.DeleteFutureSmsOperationCompleted, userState);
        }
        
        private void OnDeleteFutureSmsOperationCompleted(object arg) {
            if ((this.DeleteFutureSmsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFutureSmsCompleted(this, new DeleteFutureSmsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckSendFuture", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckSendFuture(string UserName, string Pass, string Domain, int FutureSmsId) {
            object[] results = this.Invoke("CheckSendFuture", new object[] {
                        UserName,
                        Pass,
                        Domain,
                        FutureSmsId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckSendFutureAsync(string UserName, string Pass, string Domain, int FutureSmsId) {
            this.CheckSendFutureAsync(UserName, Pass, Domain, FutureSmsId, null);
        }
        
        /// <remarks/>
        public void CheckSendFutureAsync(string UserName, string Pass, string Domain, int FutureSmsId, object userState) {
            if ((this.CheckSendFutureOperationCompleted == null)) {
                this.CheckSendFutureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckSendFutureOperationCompleted);
            }
            this.InvokeAsync("CheckSendFuture", new object[] {
                        UserName,
                        Pass,
                        Domain,
                        FutureSmsId}, this.CheckSendFutureOperationCompleted, userState);
        }
        
        private void OnCheckSendFutureOperationCompleted(object arg) {
            if ((this.CheckSendFutureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckSendFutureCompleted(this, new CheckSendFutureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum SendType {
        
        /// <remarks/>
        StaticText,
        
        /// <remarks/>
        DynamicText,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum SmsMode {
        
        /// <remarks/>
        Alert,
        
        /// <remarks/>
        SaveInPhone,
        
        /// <remarks/>
        SaveInSim,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum ReceiveType {
        
        /// <remarks/>
        All,
        
        /// <remarks/>
        UnRead,
        
        /// <remarks/>
        Top,
        
        /// <remarks/>
        Down,
        
        /// <remarks/>
        WithDate,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ReceiveSMS {
        
        private string receiveNumberField;
        
        private string smsTextField;
        
        private string dateField;
        
        private string timeField;
        
        private string unReadField;
        
        private string readField;
        
        private string reciveCodeField;
        
        private string fromNumberField;
        
        private int errorField;
        
        /// <remarks/>
        public string ReceiveNumber {
            get {
                return this.receiveNumberField;
            }
            set {
                this.receiveNumberField = value;
            }
        }
        
        /// <remarks/>
        public string SmsText {
            get {
                return this.smsTextField;
            }
            set {
                this.smsTextField = value;
            }
        }
        
        /// <remarks/>
        public string Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        public string Time {
            get {
                return this.timeField;
            }
            set {
                this.timeField = value;
            }
        }
        
        /// <remarks/>
        public string unRead {
            get {
                return this.unReadField;
            }
            set {
                this.unReadField = value;
            }
        }
        
        /// <remarks/>
        public string Read {
            get {
                return this.readField;
            }
            set {
                this.readField = value;
            }
        }
        
        /// <remarks/>
        public string reciveCode {
            get {
                return this.reciveCodeField;
            }
            set {
                this.reciveCodeField = value;
            }
        }
        
        /// <remarks/>
        public string FromNumber {
            get {
                return this.fromNumberField;
            }
            set {
                this.fromNumberField = value;
            }
        }
        
        /// <remarks/>
        public int Error {
            get {
                return this.errorField;
            }
            set {
                this.errorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1038.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum ReceiveSmsType {
        
        /// <remarks/>
        WithDate,
        
        /// <remarks/>
        CurrentDate,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SendSmsCompletedEventHandler(object sender, SendSmsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSmsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSmsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SendSingleSmsCompletedEventHandler(object sender, SendSingleSmsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSingleSmsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSingleSmsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getCreditCompletedEventHandler(object sender, getCreditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCreditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCreditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetReceiveSMSWithNumberCompletedEventHandler(object sender, GetReceiveSMSWithNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReceiveSMSWithNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReceiveSMSWithNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReceiveSMS[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReceiveSMS[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void ReadReceiveSMSCompletedEventHandler(object sender, ReadReceiveSMSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadReceiveSMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadReceiveSMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Nullable<bool> Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Nullable<bool>)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteReceiveSMSCompletedEventHandler(object sender, DeleteReceiveSMSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteReceiveSMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteReceiveSMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetDeliveryCompletedEventHandler(object sender, GetDeliveryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDeliveryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDeliveryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetLastDeliveryCompletedEventHandler(object sender, GetLastDeliveryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLastDeliveryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLastDeliveryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetSingleDeliveryCompletedEventHandler(object sender, GetSingleDeliveryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSingleDeliveryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSingleDeliveryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetAllDeliveryCompletedEventHandler(object sender, GetAllDeliveryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllDeliveryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllDeliveryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetReadReceiveSMSCompletedEventHandler(object sender, GetReadReceiveSMSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReadReceiveSMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReadReceiveSMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReceiveSMS[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReceiveSMS[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetReceiveSMSCompletedEventHandler(object sender, GetReceiveSMSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReceiveSMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReceiveSMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReceiveSMS[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReceiveSMS[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetCountAllCompletedEventHandler(object sender, GetCountAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCountAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCountAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetCountCompletedEventHandler(object sender, GetCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void ReceiveMessaageCompletedEventHandler(object sender, ReceiveMessaageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReceiveMessaageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReceiveMessaageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReceiveSMS[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReceiveSMS[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SendFutureSmsCompletedEventHandler(object sender, SendFutureSmsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendFutureSmsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendFutureSmsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteFutureSmsCompletedEventHandler(object sender, DeleteFutureSmsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteFutureSmsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteFutureSmsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void CheckSendFutureCompletedEventHandler(object sender, CheckSendFutureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckSendFutureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckSendFutureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591